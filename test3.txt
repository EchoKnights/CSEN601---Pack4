;---------------------------------------------
; Test LDI (Load Immediate)
;---------------------------------------------
LDI  R1,  #10        ; R1 = 10
LDI  R2,  #-5        ; R2 = -5 (0b111011, 6-bit signed)
LDI  R3,  #0         ; R3 = 0
LDI  R4,  #31        ; R4 = 31 (max positive 6-bit signed)
LDI  R5,  #-32       ; R5 = -32 (min negative 6-bit signed)

;---------------------------------------------
; Test ADD, SUB, MUL
;---------------------------------------------
ADD  R6,  R1         ; R6 = R6 + R1
SUB  R7,  R2         ; R7 = R7 - R2
MUL  R8,  R1         ; R8 = R8 * R1

;---------------------------------------------
; Test AND, OR
;---------------------------------------------
LDI  R9,  #15        ; R9 = 15 (0b001111)
LDI  R10, #8         ; R10 = 8 (0b001000)
AND  R11, R9         ; R11 = R11 & R9
OR   R12, R10        ; R12 = R12 | R10

;---------------------------------------------
; Test SLC, SRC (shift amounts are 6 bits)
;---------------------------------------------
LDI  R13, #1         ; R13 = 1 (shift amount)
SLC  R14, #1         ; R14 = R14 << 1 (circular left)
SRC  R15, #1         ; R15 = R15 >> 1 (circular right)
SLC  R16, #5         ; R16 = R16 << 5 (circular left)
SRC  R17, #0         ; R17 = R17 >> 0 (no shift)

;---------------------------------------------
; Test SB, LB (addresses are 6 bits)
;---------------------------------------------
LDI  R18, #23        ; R18 = 23
SB   R18, #10        ; MEM[10] = R18 (store byte)
LB   R19, #10        ; R19 = MEM[10] (load byte)
LDI  R20, #-1        ; R20 = -1 (0b111111)
SB   R20, #11        ; MEM[11] = R20
LB   R21, #11        ; R21 = MEM[11]

;---------------------------------------------
; Test BEQZ (offset is 6 bits, signed)
;---------------------------------------------
LDI  R22, #0         ; R22 = 0
BEQZ R22, #2         ; if R22 == 0, skip next 2 instructions
LDI  R23, #10        ; skipped
LDI  R23, #20        ; skipped
LDI  R23, #30        ; executed

;---------------------------------------------
; Test JR (target is 6 bits)
;---------------------------------------------
LDI  R24, #20        ; R24 = 20 (target PC)
JR   R0,  R24        ; PC = R24 (jump)
LDI  R25, #15        ; skipped
LDI  R25, #16        ; executed at PC=20

;---------------------------------------------
; Test NOP, HALT
;---------------------------------------------
NOP                  ; No operation
HALT                 ; Stop execution